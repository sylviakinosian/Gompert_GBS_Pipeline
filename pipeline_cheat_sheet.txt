# cheatsheet for GBS pipeline (Gompstyle), variant calling, entropy
# developed by Zach Gompert, Martin Schilling, and Sylvia Kinosian

##########
# 1. parse barcodes and split fastq by individual
# done on the CHPC
##########

### a ###
parse_barcodes768.pl 2bc_gompstyle.txt infilePteridium.fastq

### b ###
splitFastq_ms.pl ids.txt parsed.fastq

##########
# 2. move to workstation, 
# cluster highly similar sequences in indivduals fastq files (id = 98)
##########

### a ###
# ~/Documents/pteridium/inds/
# makes fastqs into fastas
~/gbs_tools/seqtk.sh

### b ###
# move aqui and escu taxa into separate folders
# need to harcode file path in script
# navigate to folder with .fastqs --> move_taxa.py ids.txt ./
~/gbs_tools/move_taxa.py ids.txt source/path

### c ###
# calls vsearch for each fasta file
# clusters 98% similar sequences in each fasta file
~/gbs_tools/vsearch.sh 0.98 ../centroids/

##########
# 3. combine centroids (results of vsearch.sh) from preceeding runs and cluster those (id = 92)
##########

### a ###
# all steps done twice, once for escu & aqui
cat *.fasta consensus_escu.fasta

cat *.fasta consensus_aqui.fasta

### b ###
vsearch --cluster_fast consensus_escu.fasta --threads 10 --iddef 2 --id 0.92 --consout cons_escu92.fasta --msaout msa_escu92.fasta

vsearch --cluster_fast consensus_aqui.fasta --threads 10 --iddef 2 --id 0.92 --consout cons_aqui92.fasta --msaout msa_aqui92.fasta

##########
# 4. cluster the resulting consensus sequences at lower id (84) to exclude the ones that collapse; exclude sequences/clusters that threshold number of sequences per cluster (30)
#
# kick out the consensus sequence; want the mean to not just be the pre-centroid
##########

### a ###
# clsuter at 84
~/gbs_tools/remove_collapsed_clusters.py escu_paralogs84.fasta consensus_escu.fasta
# 203292 uncollapsed clusters found

~/gbs_tools/remove_collapsed_clusters.py aqui_paralogs84.fasta consensus_aqui.fa
sta
# 451042 uncollapsed clusters found

### b ###
# remove all clusters under a given threshold
# DID NOT USE - NOT ENOUGH CLUSTERS
~/gbs_tools/remove_clusters_threshold.py 30 consensus_aqui.fasta consensus_aqui30.fasta
# 86 uncollapsed clusters found

~/gbs_tools/remove_clusters_threshold.py 10 consensus_aqui.fasta consensus_aqui10.fasta
# 870 uncollapsed clusters found

~/gbs_tools/remove_clusters_threshold.py 5 consensus_aqui.fasta consensus_aqui5.fasta
# 10513 uncollapsed clusters found

### c ###
# combine aqui and escu
cat inds_aqui/consensus_aqui.fasta inds_escu/consensus_escu.fasta > consensus_aqui_escu.fasta

### d ###
# re-run vsearch with an id of my choice (92,88,86,84)

vsearch --cluster_fast consensus_aqui_escu.fasta --threads 10 --iddef 2 --id 0.92 --consout cons_ae92.fasta --msaout msa_ae92.fasta

#Reading file consensus_aqui_escu.fasta 100%  
#55612985 nt in 654334 seqs, min 32, max 92, avg 85
#Masking 100%  
#Sorting by length 100%
#Counting unique k-mers 100%  
#Clustering 100%  
#Sorting clusters 100%
#Writing clusters 100%  
#Clusters: 634316 Size min 1, max 9, avg 1.0
#Singletons: 614351, 93.9% of seqs, 96.9% of clusters
#Multiple alignments 100%  

vsearch --cluster_fast consensus_aqui_escu.fasta --threads 10 --iddef 2 --id 0.88 --consout cons_ae88.fasta --msaout msa_ae88.fasta

#Reading file consensus_aqui_escu.fasta 100%  
#55612985 nt in 654334 seqs, min 32, max 92, avg 85
#Masking 100%  
#Sorting by length 100%
#Counting unique k-mers 100%  
#Clustering 100%  
#Sorting clusters 100%
#Writing clusters 100%  
#Clusters: 622567 Size min 1, max 9, avg 1.1
#Singletons: 591061, 90.3% of seqs, 94.9% of clusters
#Multiple alignments 100% 

vsearch --cluster_fast consensus_aqui_escu.fasta --threads 10 --iddef 2 --id 0.86 --consout cons_ae86.fasta --msaout msa_ae86.fasta

#Reading file consensus_aqui_escu.fasta 100%  
#55612985 nt in 654334 seqs, min 32, max 92, avg 85
#Masking 100%  
#Sorting by length 100%
#Counting unique k-mers 100%  
#Clustering 100%  
#Sorting clusters 100%
#Writing clusters 100%  
#Clusters: 618424 Size min 1, max 9, avg 1.1
#Singletons: 583020, 89.1% of seqs, 94.3% of clusters
#Multiple alignments 100%  

vsearch --cluster_fast consensus_aqui_escu.fasta --iddef 2 --id 0.84 --consout cons_ae84.fasta --msaout msa_ae84.fasta

#Reading file consensus_aqui_escu.fasta 100%  
#55612985 nt in 654334 seqs, min 32, max 92, avg 85
#Masking 100%  
#Sorting by length 100%
#Counting unique k-mers 100%  
#Clustering 100%  
#Sorting clusters 100%
#Writing clusters 100%  
#Clusters: 610449 Size min 1, max 9, avg 1.1
#Singletons: 567909, 86.8% of seqs, 93.0% of clusters
#Multiple alignments 100% 

### e ###
# clusters are reletively similar across ids - want more(ish) to start with because we'll lose some with the clustering
# cluster again at a lower id -- rule of thumb 2x more than the first step (ex. 88 (100-12) -->76 (100-24))

vsearch --cluster_fast consensus_aqui_escu.fasta --threads 14 --iddef 2 --id 0.76 --consout paralogs_cons_ae76.fasta --msaout paralogs_msa_ae76.fasta

#Reading file consensus_aqui_escu.fasta 100%  
#55612985 nt in 654334 seqs, min 32, max 92, avg 85
#Masking 100%  
#Sorting by length 100%
#Counting unique k-mers 100%  
#Clustering 100%  
#Sorting clusters 100%
#Writing clusters 100%  
#Clusters: 491647 Size min 1, max 166, avg 1.3
#Singletons: 396030, 60.5% of seqs, 80.6% of clusters
#Multiple alignments 100%  

### f ###
# remove resulting collapsed cluster on paralogs_msa_ae76.fasta
~/gbs_tools/remove_collapsed_clusters.py paralogs_cons_ae76.fasta consensus_singletons_ae.fasta

#491647 uncollapsed clusters found

# remove all at a given threshold (30)
~/gbs_tools/remove_clusters_threshold.py 30 consensus_singletons_ae.fasta consensus_ae30.fasta

# NOTE: decided not to use this step because number of sequences would be too low

##########
# 5. align parsed reads (from fastq) to the consensus and call variants
##########

### a ###
# index consensus sequence
# gives consensus sequence position points for the alignment later
~/hts_tools/bwa/bwa index consensus_singletons_ae.fasta 

### b ###
# picard tools to create a dictionary
java -jar ~/hts_tools/picard.jar CreateSequenceDictionary REFERENCE=consensus_singletons_ae.fasta OUTPUT=consensus_singletons_ae.dict

### c ###
# Creating the fasta index file
# We use the faidx command in samtools to prepare the fasta index file. This file describes byte offsets in the fasta file for each contig, allowing us to compute exactly where a particular reference base at contig:pos is in the fasta file.
/home/skinosian/hts_tools/samtools-1.3.1/samtools faidx consensus_singletons_ae.fasta

### d ###
# get all ya little files ready to go
###### what does this actually do??
# polyploids and diploids
~/gbs_tools/bwa_mem

### e ###
# export to .bam
 ~/gbs_tools/sam2bam_bash

### f ###
# sort bam files
~/gbs_tools/samtools_sort

### g ###
# index bam files
~/gbs_tools/samtools_indx

### h ###
# call variants with gatk (THIS DID NOT WORK)
java -jar /uufs/chpc.utah.edu/sys/pkg/GATK/GenomeAnalysisTK.jar -T UnifiedGenotyper -R /uufs/chpc.utah.edu/common/home/u6009816/pteridium/alignment/consensus_singletons_ae_clean.fasta -I /uufs/chpc.utah.edu/common/home/u6009816/pteridium/alignment/inds/idsPter.list -o pter_aeClusterCons.vcf -nct 12 -glm SNP -hets 0.001 -mbq 20 -ploidy 2 -stand_call_conf 50 -maxAltAlleles 2 -writeFullFormat

# USE THIS STEP
# call variants with samtools mpileup & bcftools
# bam.txt list --> .sorted.bam files
samtools mpileup nthreads=12 -u -E -t DP -C 50 -g -I -q 10 -Q 15 -f consensus_singletons_ae_clean.fasta -b out/pter_bam.txt > pter_variants.bcf

# bcftools
# old version
bcftools view -e -g -c -v -N -d 0.3 -p 0.01 -t 0.001 ae_variants.bcf > ae_variants_d30.vcf

# one i actually used
bcftools call -c -v -V indels -p 0.01 --threads 10 pter_variants.bcf > pter_variants.vcf

##########
# 8. o shit here come dat filter!
##########

gotta gem dat vcf filtered. how? FIND OUT


##########
# 7. entropy
##########

### a ###
./entropy -b 2000 -t 4 -k 2,3,4.. -i ae_in.gl -o out.hdf5 -m 1 -w 0

### b ###
# estpost - pulling out meaningful things from entropy
/home/skinosian/hts_tools/estpost_h5_entropy -o out_d -p deviance -s 3 -w 1 entropy_ae_k2_2.hdf5

# big q
/home/skinosian/hts_tools/estpost_h5_entropy -o out_d -p q -s 0 -w 1 entropy_ae_k2_2.hdf5


#####
# things in R
# ~/gbs_tools/scrpt.r
# generate big q (every sample value from entropy) - see above
# line 145 // then entr2coda
# line 307 entr2list, creates plots for each chain to check for label swapping
# also see estpost.R

